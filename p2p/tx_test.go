package p2p

import (
	"encoding/hex"
	"fmt"
	"testing"
)

func TestTxPayload_Parse(t *testing.T) {
	//txPayloadStr := "010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff54036cbd091b4d696e656420627920416e74506f6f6c3234a80083002078d4031efabe6d6d2fe32793d84d2d60b446f55dedce3cb2792f60bb2dcb417d07b9283d88fe014b0200000000000000706b0100f24d0000ffffffff03ab3fab27000000001976a91411dbe48cc6b617f9c6adaf4d9ed5f625b1c7cb5988ac0000000000000000266a24aa21a9edc16bd501e4b5d616ccf8d4ed95305ed8f7bf5bf0f9712a2c5af31a6e2f6e9b360000000000000000266a24b9e11b6d1a85afc306f75e4a446ddebd03bcffa5211696993ea106b804f9adc58d4de4e40120000000000000000000000000000000000000000000000000000000000000000000000000"
	// COINBASE
	txPayloadStr := "01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff18028a00081721f2de1575ae920b2f503253482f627463642fffffffff01e0f2052a010000001976a9147b9ab762d867fef558c26f8b14233e206386d56588ac00000000"

	buf, err := hex.DecodeString(txPayloadStr)
	if err != nil {
		t.Error(err)
		return
	}

	txpl := TxPayload{}
	if err = txpl.Parse(buf); err != nil {
		t.Error(err)
		return
	}
}

func TestTxPayload_TxHash(t *testing.T) {
	//txPayloadStr := "010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff6203f5bf091f2f5669614254432f4d696e6564206279207065796d616e73616d73616d692f2cfabe6d6dcd0e001d0cdc6859c013817c3e333c22ca58b6dd0a44f9ea1c71474d3f3035b51000000000000000101fa0d517aad699d63494513e27c80000ffffffff045a894425000000001976a914536ffa992491508dca0354e52f32a3a7a679a53a88ac00000000000000002b6a2952534b424c4f434b3a859891df9b9740533bab51c3e110e5423023c62c7c48eb369a7b27270026726e0000000000000000266a24b9e11b6ddca97dfc01513731a5fc59cfb3a2581426376f1ecd522ca08b397f0db53ec49f0000000000000000266a24aa21a9ed50a472707689febfb0bccd8b41e7ab218da77039fb92736b4f5acc27abc5431f0120000000000000000000000000000000000000000000000000000000000000000000000000"
	txPayloadStr := "01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff18028a00081721f2de1575ae920b2f503253482f627463642fffffffff01e0f2052a010000001976a9147b9ab762d867fef558c26f8b14233e206386d56588ac00000000"
	buf, err := hex.DecodeString(txPayloadStr)
	if err != nil {
		t.Error(err)
		return
	}

	txpl := TxPayload{}
	if err = txpl.Parse(buf); err != nil {
		t.Error(err)
		return
	}
	txHash := txpl.TxHash()
	txID := txpl.Txid()
	fmt.Println("Tx hash:", hex.EncodeToString(txHash[:]))
	fmt.Println("Tx id:", hex.EncodeToString(txID[:]))
}
